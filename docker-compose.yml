version: '3.8'

services:
  # API Gateway
  api-gateway:
    build: ./api-gateway
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development
      - AUTH_SERVICE_URL=http://auth-service:3001
      - USER_SERVICE_URL=http://user-service:3002
      - CONTENT_SERVICE_URL=http://content-service:3003
      - MEDIA_SERVICE_URL=http://media-service:3004
      - CATEGORY_SERVICE_URL=http://category-service:3005
      - COMMENT_SERVICE_URL=http://comment-service:3006
      - NOTIFICATION_SERVICE_URL=http://notification-service:3007
      - ANALYTICS_SERVICE_URL=http://analytics-service:3008
      - SEARCH_SERVICE_URL=http://search-service:3009
      - ADMIN_SERVICE_URL=http://admin-service:3010
    depends_on:
      - auth-service
      - user-service
      - content-service
      - media-service
      - category-service
      - comment-service
      - notification-service
      - analytics-service
      - search-service
      - admin-service

  # Auth Service
  auth-service:
    build: ./auth-service
    ports:
      - "3001:3001"
    environment:
      - NODE_ENV=development
      - MONGODB_URI=mongodb://mongodb:27017/auth-service
      - REDIS_URL=redis://redis:6379
      - KAFKA_BROKER=kafka:9092
      - JWT_SECRET=your-jwt-secret
    depends_on:
      - mongodb
      - redis
      - kafka

  # User Service
  user-service:
    build: ./user-service
    ports:
      - "3002:3002"
    environment:
      - NODE_ENV=development
      - MONGODB_URI=mongodb://mongodb:27017/user-service
      - REDIS_URL=redis://redis:6379
      - KAFKA_BROKER=kafka:9092
    depends_on:
      - mongodb
      - redis
      - kafka

  # Content Service
  content-service:
    build: ./content-service
    ports:
      - "3003:3003"
    environment:
      - NODE_ENV=development
      - MONGODB_URI=mongodb://mongodb:27017/content-service
      - REDIS_URL=redis://redis:6379
      - KAFKA_BROKER=kafka:9092
    depends_on:
      - mongodb
      - redis
      - kafka

  # Media Service
  media-service:
    build: ./media-service
    ports:
      - "3004:3004"
    environment:
      - NODE_ENV=development
      - MONGODB_URI=mongodb://mongodb:27017/media-service
      - REDIS_URL=redis://redis:6379
      - KAFKA_BROKER=kafka:9092
      - MINIO_ENDPOINT=minio:9000
      - MINIO_ACCESS_KEY=minioadmin
      - MINIO_SECRET_KEY=minioadmin
    depends_on:
      - mongodb
      - redis
      - kafka
      - minio

  # Category Service
  category-service:
    build: ./category-service
    ports:
      - "3005:3005"
    environment:
      - NODE_ENV=development
      - MONGODB_URI=mongodb://mongodb:27017/category-service
      - REDIS_URL=redis://redis:6379
      - KAFKA_BROKER=kafka:9092
    depends_on:
      - mongodb
      - redis
      - kafka

  # Comment Service
  comment-service:
    build: ./comment-service
    ports:
      - "3006:3006"
    environment:
      - NODE_ENV=development
      - MONGODB_URI=mongodb://mongodb:27017/comment-service
      - REDIS_URL=redis://redis:6379
      - KAFKA_BROKER=kafka:9092
    depends_on:
      - mongodb
      - redis
      - kafka

  # Notification Service
  notification-service:
    build: ./notification-service
    ports:
      - "3007:3007"
    environment:
      - NODE_ENV=development
      - MONGODB_URI=mongodb://mongodb:27017/notification-service
      - REDIS_URL=redis://redis:6379
      - KAFKA_BROKER=kafka:9092
    depends_on:
      - mongodb
      - redis
      - kafka

  # Analytics Service
  analytics-service:
    build: ./analytics-service
    ports:
      - "3008:3008"
    environment:
      - NODE_ENV=development
      - MONGODB_URI=mongodb://mongodb:27017/analytics-service
      - REDIS_URL=redis://redis:6379
      - KAFKA_BROKER=kafka:9092
      - ELASTICSEARCH_URL=http://elasticsearch:9200
    depends_on:
      - mongodb
      - redis
      - kafka
      - elasticsearch

  # Search Service
  search-service:
    build: ./search-service
    ports:
      - "3009:3009"
    environment:
      - NODE_ENV=development
      - ELASTICSEARCH_URL=http://elasticsearch:9200
      - REDIS_URL=redis://redis:6379
      - KAFKA_BROKER=kafka:9092
    depends_on:
      - elasticsearch
      - redis
      - kafka

  # Admin Service
  admin-service:
    build: ./admin-service
    ports:
      - "3010:3010"
    environment:
      - NODE_ENV=development
      - MONGODB_URI=mongodb://mongodb:27017/admin-service
      - REDIS_URL=redis://redis:6379
      - KAFKA_BROKER=kafka:9092
    depends_on:
      - mongodb
      - redis
      - kafka

  # MongoDB
  mongodb:
    image: mongo:latest
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db

  # Redis
  redis:
    image: redis:alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data

  # Kafka
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    ports:
      - "2181:2181"
    environment:
      - ZOOKEEPER_CLIENT_PORT=2181

  kafka:
    image: confluentinc/cp-kafka:latest
    ports:
      - "9092:9092"
    environment:
      - KAFKA_BROKER_ID=1
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092
      - KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR=1
    depends_on:
      - zookeeper

  # Elasticsearch
  elasticsearch:
    image: elasticsearch:8.7.0
    ports:
      - "9200:9200"
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data

  # MinIO
  minio:
    image: minio/minio
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      - MINIO_ROOT_USER=minioadmin
      - MINIO_ROOT_PASSWORD=minioadmin
    volumes:
      - minio_data:/data
    command: server /data --console-address ":9001"

volumes:
  mongodb_data:
  redis_data:
  elasticsearch_data:
  minio_data: 